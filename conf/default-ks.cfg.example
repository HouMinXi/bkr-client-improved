%post --log=/root/my-ks-post.log

rtype=rel-eng
rtype=nightly
downhostname=download.devel.redhat.com
verx=$(rpm -E %rhel)
case $verx in
8|9)
	buildrootUrl=http://$downhostname/rhel-$verx/$rtype/BUILDROOT-$verx/latest-BUILDROOT-$verx-RHEL-$verx/compose/Buildroot/$(arch)/os/
	cat <<-EOF >/etc/yum.repos.d/beaker-buildroot.repo
	[beaker-buildroot]
	name=beaker-buildroot
	baseurl=$buildrootUrl
	enabled=1
	gpgcheck=0
	skip_if_unavailable=1
	EOF
	;;
esac

cat /usr/bin/rhts-environment.sh
cat <<-'EOF' >>/usr/bin/rhts-environment.sh
	# see: https://restraint.readthedocs.io/en/latest/remove_rhts.html#legacy-rhts-task-environment-variables
	# if restraint runs in un-compatable mode, and we still use old ENV name
	if [[ -n "$RSTRNT_JOBID" && -z "$JOBID" ]]; then
		export RHTS_COMPAT=no
		export ARCH="$RSTRNT_OSARCH" \
		DISTRO="$RSTRNT_OSDISTRO" \
		FAMILY="$RSTRNT_OSMAJOR" \
		JOBID="$RSTRNT_JOBID" \
		REBOOTCOUNT="$RSTRNT_REBOOTCOUNT" \
		RECIPESETID="$RSTRNT_RECIPESETID" \
		RECIPEID="$RSTRNT_RECIPEID" \
		RECIPETESTID="$RSTRNT_RECIPEID" \
		SUBMITTER="$RSTRNT_OWNER" \
		TASKID="$RSTRNT_TASKID" \
		TESTID="$RSTRNT_TASKID" \
		TESTNAME="$RSTRNT_TASKNAME" \
		TESTPATH="$RSTRNT_TASKPATH" \
		VARIANT="$RSTRNT_OSVARIANT"
	fi
EOF

[[ $verx = 7 ]] && yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
pypkg="python3"
pycurl=python3-pycurl; [[ $verx = 7 ]] && pycurl=python36-pycurl
yum install -y $pypkg $pycurl

cat << 'EOF' > /usr/share/restraint/plugins/task_run.d/27_task_require
#!/bin/bash

. /usr/share/restraint/plugins/helpers
rstrnt_info "*** Running Plugin: $0 @$PWD"

if [[ -z "$RSTRNT_NOPLUGINS" ]]; then
	echo "{debug} current dir: $PWD"
	[[ -n "$TASK_URIS" ]] && echo "{debug} task urls: $TASK_URIS"
	[[ -n "$REPO_URLS" ]] && echo "{debug} task urls: $REPO_URLS"

	#if install requires at different repo
	_cmd=taskname2url.py
	command -v $_cmd || {
		_url=http://download.devel.redhat.com/qa/rhts/lookaside/bkr-client-improved/utils/taskname2url.py
		curl -Ls -o /usr/bin/${_cmd} ${_url}
		chmod +x /usr/bin/${_cmd}
	}

	for taskuri in $TASK_URIS; do taskOpts+="-task=$taskuri "; done
	for repourl in $REPO_URLS; do repoOpts+="-repo=$repourl "; done
	targetdir=/mnt/tests
	require_tasks=$({ sed -nr '/^.*"RhtsRequires:\s+library\(([^"]+)\)" .*$/{s@@\1@;s@/@/Library/@;p}' Makefile;
			  awk -F'[=;]' '/^(task|repo)Requires/{for (i=2;i<=NF;i++){if($i ~ "^/") print substr($i,2)}}' metadata;
			} 2>/dev/null | sort -u)
	for task in $require_tasks; do
		read repo _path <<<"${task/\// }"
		uri=$(taskname2url.py /$task $taskOpts $repoOpts)
		[[ -z "$uri" ]] && continue
		read url rpath <<<"${uri/\#/ }"
		repopath=$targetdir/$repo
		fpath=$repopath/$rpath
		[[ -d $fpath ]] && continue

		echo "{debug} task require install: $fpath"
		file=${url##*/}
		[[ "$url" != "$url_prev" ]] && curl -k -Ls ${url} -o ${file}
		if test -f ${file}; then
			url_prev=$url
			mkdir -p $repopath
			filetype=$(file -b ${file})
			if [[ "$filetype" = Zip* ]]; then
				_fpath=$(unzip $file -d $targetdir | sed -n '/^ *creating: /{s///;p}')
				mv $_fpath $fpath
			else
				case "$filetype" in
					(gzip*) xtype=z;;
					(bzip2*) xtype=j;;
					(XY*) xtype=J;;
					(*) xtype=a;;
				esac
				topdir=$(tar taf ${file} | head -1 | sed -e 's@/.*@@')
				tar -C $repopath -${xtype}xf ${file} ${topdir}/$rpath --strip-components=1
			fi
		else
			continue
		fi
		pkgs=$({ sed -nr '/^.*"Requires:\s+([^"()]+)" .*$/{s//\1/;s/ +/\n/;p}' $fpath/Makefile;
			} 2>/dev/null | sort -u)
		[[ -n "$pkgs" ]] && yum install -y $pkgs
	done
fi

exec "$@"
EOF
chmod a+x /usr/share/restraint/plugins/task_run.d/27_task_require

%end
