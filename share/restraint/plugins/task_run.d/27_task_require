#!/bin/bash
#ref: https://readthedocs.org/projects/restraint/downloads/pdf/latest/#section.1.9

. /usr/share/restraint/plugins/helpers
rstrnt_info "*** Running Plugin: $0 @$PWD"

_targetdir=/mnt/tests
_downloaddir=/mnt/download
_logf=/tmp/${0##*/}.log

_install_requirements() {
	hash -r && command -v taskfetch.sh || {
		local _downloadurl=http://download.devel.redhat.com/qa/rhts/lookaside
		local _urls="$_downloadurl/bkr-client-improved/utils/taskfetch.sh"
		(cd /usr/bin && for _url in $_urls; do curl -Ls --retry 64 --retry-delay 2 -O $_url && chmod +x ${_url##*/}; done)
	}
}

if [[ -z "$RSTRNT_NOPLUGINS" ]]; then
	#install taskfetch.sh
	_install_requirements &>/dev/null
	[[ -n "$REPO_URLS" ]] && echo "{debug} task urls: $REPO_URLS" >&2
	[[ -n "$TASK_URIS" ]] && echo "{debug} task urls: $TASK_URIS" >&2
	for repourl in $REPO_URLS; do
		[[ "$repourl" != *[,@]* ]] && continue
		repoOpts+="--repo=$repourl "
	done
	eval TASK_URIA=(${TASK_URIS//[\{\}]/\"})
	for taskuri in "${TASK_URIA[@]}"; do
		[[ "$taskuri" != *[,@]* ]] && continue
		taskOpts+="'--task=$taskuri' "
	done

	if [[ "$_FETCH_URL" = no && ! -f matadata ]]; then
		echo -e "{info} legacy test case and without fetch-url setup. do nothing" >&2
	else
		eval taskfetch.sh $repoOpts $taskOpts --fetch-require .
	fi

	echo -e "{debug} leaving restraint plugin $0\n" >&2
fi

exec "$@"
