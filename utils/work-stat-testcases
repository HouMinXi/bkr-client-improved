#!/bin/bash

# __main__
#===============================================================================
export LANG=C
P=${0##*/}
#-------------------------------------------------------------------------------
Usage() {
	echo "Usage: $P <-u user> [-w nweek] <\$repodir...>"
}
weekago() {
	local w=${1:-1};
	local to=$2

	weekday=$(date +%w);
	[[ $weekday = 0 ]] && weekday=7
	date -d"now-$((weekday-1)) days -$((w)) weeks" +%Y-%m-%d
	if [[ "$to" = now || $w = 0 ]]; then
		date -d"now" +%Y-%m-%d
	elif [[ "$to" = lastweek ]]; then
		date -d"now-$((weekday)) days" +%Y-%m-%d
	else
		date -d"now-$((weekday-1)) days -$((w)) weeks +6 days" +%Y-%m-%d
	fi
}
is_git() {
	local repo=${1:-.}
	(cd $repo; git worktree list | sed -r 's|^.*(/[^ ]*).*$|\1|;q')
}
case_root() {
	for d; do
		while d=${d%/*} && test -d $d; do
			[[ -f $d/Makefile && -f $d/runtest.sh ]] && { echo $d; break; }
		done
	done | sort -u
}

_at=`getopt -o hw:u: \
	--long help \
	--long tonow \
	--long tolast \
    -n "$P" -- "$@"`
eval set -- "$_at"

while true; do
	case "$1" in
	-h|--help) Usage; shift 1; exit 0;;
	-w) Weekago=$2; shift 2;;
	-u) User=$2; shift 2;;
	--tonow) To=now; shift 1;;
	--tolast) To=lastweek; shift 1;;
	--) shift; break;;
	esac
done
[[ -z "$User" || $# = 0 ]] && { Usage >&2; exit 1; }

{ read from; read to; } <<<$(weekago ${Weekago:-1} $To)
update= new=
for repo; do
	prefix=$(is_git $repo)/ || continue
	pushd $(cd $repo; git rev-parse --show-toplevel) &>/dev/null
	gitlog=$(git log -E --author="$User" --name-status --since=$from --until=$to --oneline)
	update+=$(case_root $(awk '/^M.*/ {print $2}' <<<"$gitlog") | sed -e "s;^;\t$prefix;")s'\n'
	new+=$(case_root $(awk '/^A.*Makefile/ {print $2}' <<<"$gitlog") | sed -e "s;^;\t$prefix;")$'\n'
	popd &>/dev/null
done
echo -e "Update test cases\n${update%??}"
echo -e "New test cases\n${new%??}"
