#!/bin/bash
#author jiyin@redhat.com

dbRoot=/var/cache/distroInfoDB

Prompt="[distro-compost-dbupdate]"
rpmdb=rpmsdata
lockf=/tmp/distroDB.w.lock
trap "sigproc" SIGINT SIGTERM SIGHUP SIGQUIT EXIT
sigproc() {
	rm -f $lockf
	exit
}

chanList="#fs-qe #network-qe #kernel-qe-sti"

# https://en.wikichip.org/wiki/irc/colors
ircBold=$'\x02'
ircItalics=$'\x1D'
ircUnderline=$'\x1F'
ircReverse=$'\x16'
ircPlain=$'\x0F'

ircWhite=$'\x03'00
ircBlack=$'\x03'01
ircNavy=$'\x03'02
ircGreen=$'\x03'03
ircRed=$'\x03'04
ircMaroon=$'\x03'05
ircPurple=$'\x03'06
ircOlive=$'\x03'07
ircYellow=$'\x03'08
ircLightGreen=$'\x03'09
ircTeal=$'\x03'10
ircCyan=$'\x03'11
ircRoyalblue=$'\x03'12
ircMagenta=$'\x03'13
ircGray=$'\x03'14
ircLightGray=$'\x03'15

Usage() { echo "Usage: $0 [-h|--help] [--dbroot </some/path>]" >&2; }

_at=`getopt -o h \
	--long help \
	--long dbroot: \
	-n "$0" -- "$@"`
eval set -- "$_at"
while true; do
	case "$1" in
	-h|--help) Usage; shift 1; exit 0;;
	--dbroot)  dbRoot=$2; shift 2;;
	--) shift; break;;
	esac
done

case $(ps -o stat= -p $$) in
  *+*) BackGround=no ;;
  *) BackGround=yes ;;
esac

UpdateDB() {
	cd $dbRoot
	rm -f .[Cc]url* #remove old version db files

	rpm -q procmail >/dev/null || yum install -y procmail &>/dev/null
	lockfile -1 -r 1 $lockf || return 0

	#Update distro list
	for family in 9 8 7; do
		distro-list.sh -f $family -t all
	done > >(tee distro.list.tmp) 2>err.log
	distro-list.sh -n fedora-% -t '' > >(tee -a distro.list.tmp) 2>>err.log
	[[ -s distro.list.tmp ]] || {
		rm -f $lockf
		return 1
	}

	[ ! -f distro.list ] && touch distro.list
	diff -pNu distro.list distro.list.tmp >distro.list.diff
	mv distro.list.tmp distro.list

	#Update pkg list
	newdistros=$(sed -n '/^+[^+]/{s/^+//; p}' distro.list.diff)
	echo "$Prompt update new distros:"
	for distro in $newdistros "$@"; do
		[[ -z "${distro// /}" ]] && continue
		distrotrees_file=$rpmdb/${distro// /_}.distrotrees.gz
		cachefile=$rpmdb/${distro// /_}.json.gz

		echo "$Prompt update distro: $distro ..."
		distrotrees=
		for ((i=0; i<3; i++)); do
			distrotrees=$(bkr distro-trees-list --limit=0 --name "$distro") && break
		done
		if [[ -z "$distrotrees" ]]; then
			echo "$Prompt get $distro trees list fail ..."
			continue
		fi

		[[ -s $distrotrees_file ]] || {
			echo "$distrotrees" > >(gzip >$distrotrees_file)
		}

		[[ -f $cachefile ]] || {
			urls=$(echo "$distrotrees" |
				awk '/https?:/ {
					if ($3 ~ "/compose/") {
						sub("/compose/.*$", "/compose/metadata", $3)
					} else if ($3 ~ "/released/rhel-4-5/") {
						sub("([^/]+/){2}$", "metadata", $3)
					} else if ($3 ~ "/released/") {
						sub("([^/]+/){3}$", "metadata", $3)
					} else {
						rc=1
					}
					if (rc != 1) {print $3}
				}' | sort -u)

			for url in $urls; do
				[[ "$url" =~ RHEL-?5 ]] && continue
				if curl -sf -k -L -u: $url/rpms.json > >(gzip >$cachefile) ||
					curl -sf -k -L -u: $url/rpm-manifest.json > >(gzip >$cachefile); then
					break
				else
					[[ -t 2 && "$BackGround" = yes ]] || echo "[warn] get rpm json file of '$distro' fail: $url" >&2
					rm -f $cachefile
				fi
			done
		}
	done
	\cp distro.list $rpmdb/.

	# update distrotrees of latest distro
	# sometimes beaker requires a few days to sync distro to difference lab
	echo "$Prompt update recently distros:"
	while read fpath; do
		syncedFlagOrig=2
		syncedFlagNow=0

		distrotreesl=$(zcat $fpath) ||
			echo "$Prompt zcat $fpath fail: '$distrotreesl'" >&2
		if [[ -n "$distrotreesl" ]]; then
			if echo "$distrotreesl"|grep -q '\.pek2.redhat.com'; then
				syncedFlagOrig=1
				continue
			else
				syncedFlagOrig=0
			fi
		else
			syncedFlagOrig=2
		fi

		file=${fpath##*/}
		distro=${file%.distrotrees.gz}
		distro_name=${distro//_/ }
		distrotrees=$(bkr distro-trees-list --limit=0 --name "$distro_name")
		if [[ -n "$distrotrees" ]]; then
			tmpfile=/tmp/$file.$$
			echo "$distrotrees" > >(gzip >$tmpfile)
			cmp -s ${fpath} $tmpfile || {
				echo "$Prompt copy $tmpfile to $fpath ..."
				\cp -f $tmpfile ${fpath}
			}
			\rm -f $tmpfile
		else
			echo "$Prompt $distro_name has been removed, remove $fpath ..."
			\rm -f $fpath
			continue
		fi

		if echo "$distrotrees"|grep -q '\.pek2.redhat.com'; then
			syncedFlagNow=1
		fi
		[[ "$syncedFlagOrig" = 0 && "$syncedFlagNow" = 1 ]] && {
			for chan in $chanList; do
				_distro=${distro_name/-/-${ircRoyalblue}}${ircPlain}
				: ircmsg.sh -s fs-qe.usersys.redhat.com -p 6667 -n testBot -P rhqerobot:irc.devel.redhat.com -L testBot:testBot \
				-C "$chan" "${ircBold}${ircLightGreen}{Notice}${ircPlain} distro: ${_distro} synced to ${ircBold}pek2${ircPlain} lab done"
				sleep 1
			done
		}
	done < <(find $rpmdb -mtime -5 -type f -name '*.distrotrees.gz')
	rm -f $lockf
}

#__main__
[ `id -u` != 0 ] && {
	echo "{Warn} Update database need root. try 'sudo $0'" >&2
	exit 1
}

mkdir -p $dbRoot/$rpmdb
UpdateDB "$@"

# rsync to public server
#_path=/export/engineering_qa/rhts/lookaside
#_downhost="shell.lab.bos.fedora hat.com"; downhost=${_downhost/fedora /red}
#su yjh bash -c "rsync -av --update --rsync-path=$_path/bin/rsync $dbRoot/$rpmdb/ jiyin@${downhost}:${_path}/distro-rpmsdata"
#su yjh bash -c "ssh jiyin@${downhost} 'cd ${_path}/kiss-vm-ns/; make u'"
#su yjh bash -c "ssh jiyin@${downhost} 'cd ${_path}/bkr-client-improved/; make u'"
#su yjh bash -c "rsync -av --update --rsync-path=$_path/bin/rsync --exclude=.git --delete $toolspath/kiss-vm-ns jiyin@${downhost}:${_path}/"
#su yjh bash -c "rsync -av --update --rsync-path=$_path/bin/rsync --exclude=.git --delete $toolspath/bkr-client-improved jiyin@${downhost}:${_path}/"
